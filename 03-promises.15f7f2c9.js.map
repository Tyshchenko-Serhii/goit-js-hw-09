{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAoBF,SAASC,cAAc,uBAC3CE,EAAmBH,SAASC,cAAc,sBAC1CG,EAAgBJ,SAASC,cAAc,wBAQ7C,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAfbQ,EAAAlB,GAASmB,OAAOC,KAAK,CACnBC,SAAU,OACVC,MAAO,QACPC,aAAc,SAgBhBrB,EAAKsB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOvB,EAAkBwB,OACjCC,EAAOF,OAAOtB,EAAiBuB,OAC/BE,EAASH,OAAOrB,EAAcsB,OAElC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDxB,EAAcwB,EAAUL,GACrBM,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBQ,EAAAlB,GAASmB,OAAOe,QACd,uBAAqBzB,QAAiBC,OAAW,IAGpDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBQ,EAAAlB,GAASmB,OAAOiB,QACd,sBAAoB3B,QAAeC,OAAW,IAGpDiB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelayElement = document.querySelector('input[name=\"delay\"]');\nconst delayStepElement = document.querySelector('input[name=\"step\"]');\nconst amountElement = document.querySelector('input[name=\"amount\"]');\n\nNotiflix.Notify.init({\n  fontSize: '30px',\n  width: '500px',\n  borderRadius: '10px',\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  let delay = Number(firstDelayElement.value);\n  let step = Number(delayStepElement.value);\n  let amount = Number(amountElement.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms.`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms.`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelayElement","$47d4ff9957288465$var$delayStepElement","$47d4ff9957288465$var$amountElement","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","init","fontSize","width","borderRadius","addEventListener","event","preventDefault","delay1","Number","value","step","amount","position1","then","success","catch","failure"],"version":3,"file":"03-promises.15f7f2c9.js.map"}