{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAoBF,SAASC,cAAc,uBAC3CE,EAAmBH,SAASC,cAAc,sBAC1CG,EAAgBJ,SAASC,cAAc,wBAQ7C,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAfPQ,EAAAlB,GAASmB,OAAOC,KAAK,CACnBC,SAAU,OACVC,MAAO,QACPC,aAAc,SAgBhBrB,EAAKsB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOvB,EAAkBwB,OACjCC,EAAOF,OAAOtB,EAAiBuB,OAC/BE,EAASH,OAAOrB,EAAcsB,OAEzBG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDxB,EAAcwB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBQ,EAAAlB,GAASmB,OAAOgB,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,O,IAGjD2B,OAAM,SAAAH,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBQ,EAAAlB,GAASmB,OAAOmB,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,O,IAGjDiB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelayElement = document.querySelector('input[name=\"delay\"]');\nconst delayStepElement = document.querySelector('input[name=\"step\"]');\nconst amountElement = document.querySelector('input[name=\"amount\"]');\n\nNotiflix.Notify.init({\n  fontSize: '30px',\n  width: '500px',\n  borderRadius: '10px',\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  let delay = Number(firstDelayElement.value);\n  let step = Number(delayStepElement.value);\n  let amount = Number(amountElement.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms.`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms.`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayElement","$ce04d3a99e08e73b$var$delayStepElement","$ce04d3a99e08e73b$var$amountElement","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$parcel$interopDefault","Notify","init","fontSize","width","borderRadius","addEventListener","event","preventDefault","delay1","Number","value","step","amount","position1","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.53d4ade6.js.map"}